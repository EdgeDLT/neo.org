<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Apply for NEO/GAS" xml:space="preserve">
    <value>申请NEO/GAS</value>
  </data>
  <data name="Apply For NEO/GAS in Testnet" xml:space="preserve">
    <value>申请测试网的NEO/GAS</value>
  </data>
  <data name="If you are developing a NEO ecosystem application project, and need NEO/GAS in the &lt;b&gt;TestNet&lt;/b&gt;, please fill in the following application form and send it. Once your application has been processed, you will receive an email notification." xml:space="preserve">
    <value>如果你正在创建NEO生态的项目，需要 &lt;b&gt;测试网&lt;/b&gt; 的 NEO 或 GAS，请填写下面的表单进行申请，申请通过后会收到邮件通知。</value>
  </data>
  <data name="Technical Documents" xml:space="preserve">
    <value>技术文档</value>
  </data>
  <data name="Open link" xml:space="preserve">
    <value>访问链接</value>
  </data>
  <data name="Security Bounty" xml:space="preserve">
    <value>安全奖励</value>
  </data>
  <data name="Building blockchain games in NEO" xml:space="preserve">
    <value>在 NEO 上开发区块链游戏</value>
  </data>
  <data name="Building decentralized apps in the form of smart contracts" xml:space="preserve">
    <value>使用智能合约开发去中心化的 App</value>
  </data>
  <data name="Consensus" xml:space="preserve">
    <value>共识机制</value>
  </data>
  <data name="Develop wallets that suport NEO, GAS, and other NEP-5 assets" xml:space="preserve">
    <value>开发支持 NEO、GAS 和其它 NEP-5 资产的钱包客户端</value>
  </data>
  <data name="Developer Guide" xml:space="preserve">
    <value>开发指南</value>
  </data>
  <data name="Document for Exchange Developers" xml:space="preserve">
    <value>交易所开发文档</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="Exchange Integration" xml:space="preserve">
    <value>交易所对接</value>
  </data>
  <data name="Explorer, monitor, compiler and other blockchain tools" xml:space="preserve">
    <value>开发区块链浏览器，节点监控，编译器和其它区块链工具</value>
  </data>
  <data name="Gaming" xml:space="preserve">
    <value>游戏</value>
  </data>
  <data name="Learn how to use smart contracts for mint NEP-5 Tokens" xml:space="preserve">
    <value>学习如何使用智能合约发行 NEP-5 资产</value>
  </data>
  <data name="Mint NEP-5 Tokens" xml:space="preserve">
    <value>发行 NEP-5 资产</value>
  </data>
  <data name="NEO technical documents provide comprehensive tutorials that contain beginner’s guides including NEO introduction, NEO node client user guide and development environment setup as well as advanced contents such as development tools, smart contract tutorials and examples and API documents for your reference." xml:space="preserve">
    <value>NEO 技术文档为开发者提供全面基础的开发指导，内容覆盖帮助初级开发者入门的 NEO 相关知识介绍、NEO 节点客户端的使用指南以及开发环境的搭建，还有适合初中级开发者进阶的开发工具、智能合约教程、示例和 API 文档可供参考。</value>
  </data>
  <data name="Quick Start" xml:space="preserve">
    <value>快速开始</value>
  </data>
  <data name="Smart Contract" xml:space="preserve">
    <value>智能合约</value>
  </data>
  <data name="The targeted readers of Developer Guide are mainly blockchain technicians. After reading this document, you can understand the technical details of NEO and you can quickly participate in the construction of NEO's economic ecosystem." xml:space="preserve">
    <value>开发指南，面向的读者主要是区块链的技术人员，通过阅读本文档以后，能够理解掌握 NEO 的技术细节，从而可以快速的参与 NEO 的经济生态系统的建设。</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>工具</value>
  </data>
  <data name="Wallet" xml:space="preserve">
    <value>钱包</value>
  </data>
  <data name="Whitepaper" xml:space="preserve">
    <value>白皮书</value>
  </data>
</root>