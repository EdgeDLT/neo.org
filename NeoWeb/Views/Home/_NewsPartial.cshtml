@model List<NewsViewModel>

@for (int i = 0; i < Model.Count(); i++)
{
    var item = (Model)[i];

    <div class="news-card">
        @if (item.Type == NewsViewModelType.Blog)
        {
            @if (string.IsNullOrEmpty(item.Blog.Cover))
            {
                <a class="img d-block" href="~/blog/details/@item.Blog.Id" data-original="@Helper.ToCDN("/images/news/blog.svg")"></a>
            }
            else
            {
                <a class="img d-block" href="~/blog/details/@item.Blog.Id" data-original="@String.Format("/upload/{0}", @item.Blog.Cover).ToLower()"></a>
            }
            <div class="content-wrapper">
                <div class="content-title"><a href="~/blog/details/@item.Blog.Id">@item.Blog.Title</a></div>
                <div class="content-body">@item.Blog.Summary.Substring(0, Math.Min(70, item.Blog.Summary.Length))â€¦</div>
                <div class="content-tags">
                    @if (!string.IsNullOrEmpty(item.Blog.Tags))
                    {
                        foreach (var tag in item.Blog.Tags.Split(','))
                        {
                            <a class="article-tag1 mr-1" href="~/news?keywords=@tag.Trim()"># @tag.Trim()</a>
                        }
                    }
                </div>
            </div>
        }
        else if (item.Type == NewsViewModelType.Event)
        {
            @if (string.IsNullOrEmpty(item.Event.Cover))
            {
                <a class="img" href="~/event/details/@item.Event.Id" data-original="@Helper.ToCDN("/images/news/events.svg")"></a>
            }
            else
            {
                <a class="img" href="~/event/details/@item.Event.Id" data-original="@String.Format("/upload/{0}", @item.Event.Cover).ToLower()"></a>
            }
            <div class="content-wrapper">
                <div class="content-title"><a href="~/event/details/@item.Event.Id">@item.Event.Name</a></div>
                <div class="small">
                    @if (item.Event.StartTime.Date == item.Event.EndTime.Date)
                    {
                        <div><i class="iconfont">&#xe610;</i> @item.Event.StartTime.DayOfWeek.ToString().Substring(0, 3), @item.Event.StartTime.ToString("yyyy-MM-dd HH:mm") - @item.Event.EndTime.ToString("HH:mm")</div>
                    }
                    else
                    {
                        <div><i class="iconfont">&#xe610;</i> @item.Event.StartTime.ToString("yyyy-MM-dd HH:mm") - @item.Event.EndTime.ToString("yyyy-MM-dd HH:mm")</div>
                    }
                    <div><i class="iconfont">&#xe60f;</i> @item.Event.Country - @item.Event.City</div>
                </div>
                <div class="article-tag1 mr-1">
                    @if (!string.IsNullOrEmpty(item.Event.Tags))
                    {
                        foreach (var tag in item.Event.Tags.Split(','))
                        {
                            <a class="content-tag" href="~/news?keywords=@tag.Trim()"># @tag.Trim()</a>}
                    }
                </div>
            </div>
        }
        else if (item.Type == NewsViewModelType.Media)
        {
            @if (string.IsNullOrEmpty(item.Media.Cover))
            {
                <a class="img" href="@item.Media.Link" target="_blank" data-original="@Helper.ToCDN("/images/news/media.svg")"></a>
            }
            else
            {
                <a class="img" href="@item.Media.Link" target="_blank" data-original="@String.Format("/upload/{0}", @item.Media.Cover).ToLower()"></a>
            }
            <div class="content-wrapper">
                <div class="content-title"><a href="~/media/details/@item.Media.Id">@item.Media.Title</a></div>
                <div class="content-tags">
                    @if (!string.IsNullOrEmpty(item.Media.Tags))
                    {
                        foreach (var tag in item.Media.Tags.Split(','))
                        {
                            <a class="article-tag1 mr-1" href="~/news?keywords=@tag.Trim()">#@tag.Trim()</a>
                        }
                    }
                </div>
            </div>
        }
    </div>
}
