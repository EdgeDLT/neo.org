@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@{ ViewData["Title"] = Localizer["Contributors"].Value; }
@section Styles{
    <link rel="stylesheet" href="@Helper.ToCDN("/css/neogas.min.css", true)" />
}

<div class="introduction">
    <div class="introduction-start">
        <div class="introduction-title"><em>NEO</em><br />&amp; GAS</div>
        <div class="introduction-content">@Localizer["After four years of stable MainNet operation, Neo is undergoing it's biggest evolution as it migrates to N3 - The most powerful and feature rich version of the Neo blockchain to date."]</div>
    </div>
    <img class="introduction-img" data-original="@Helper.ToCDN("/images/discover/placeholder.png", true)" />
</div>

<div class="divider"></div>

<div class="resources">
    <div class="resources-start">
        <div class="menu">
            <div class="menu-item">
                @Localizer["Tokens"]
                <i class="iconfont">&#xe6ab;</i>
            </div>
            <div class="menu-item">
                @Localizer["Wallets"]
                <i class="iconfont">&#xe6ab;</i>
            </div>
        </div>

        <select class="select-menu-page form-control">
            <option>@Localizer["Tokens"]</option>
            <option>@Localizer["Wallets"]</option>
        </select>
    </div>

    <div class="resources-end">
        <div class="menu-page">
            <partial name="./_TokensPartial" />
        </div>
        <div class="menu-page">
            <partial name="./_WalletsPartial" />
        </div>
    </div>
</div>

@section Scripts {
    <script src="@Helper.ToCDN("/lib/jquery/jquery.min.js")"></script>
    <script>$(document).ready(() => {
    const hashArray = ['tokens', 'wallets']

    function updateCurrentPage(i) {
            $('.menu-item').each((j, menuItem) => {
                if (i === j) {
                    $(menuItem).addClass('active');
                    window.location.hash = hashArray[i];
                } else {
                    $(menuItem).removeClass('active');
                }
            });
        $('.menu-page').each((j, menuPage) => {
            if (i === j) {
            $(menuPage).addClass('active');
                window.location.hash = hashArray[i];
            } else {
            $(menuPage).removeClass('active');
            }
        });
        $('.select-menu-page').prop('selectedIndex', i);
    };

    $('.menu-item').each((i, menuItem) => {
            $(menuItem).click(() => {
                updateCurrentPage(i);
            });
    });

    $('.select-menu-page').change(e => {
            updateCurrentPage(e.target.selectedIndex);
    });

    const hash = window.location.hash.replace(/#/g, '');
    const index = hashArray.indexOf(hash);

    updateCurrentPage(index >= 0 ? index : 0);
    });
    </script>
}
